<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>orgmode - Tag - Sidharth Arya</title>
        <link>https://sidhartharya.com/tags/orgmode/</link>
        <description>orgmode - Tag - Sidharth Arya</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sidhartharya10@gmail.com (Sidharth Arya)</managingEditor>
            <webMaster>sidhartharya10@gmail.com (Sidharth Arya)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Jun 2021 00:00:00 &#43;0530</lastBuildDate><atom:link href="https://sidhartharya.com/tags/orgmode/" rel="self" type="application/rss+xml" /><item>
    <title>Integrating Org Protocol with Qutebrowser</title>
    <link>https://sidhartharya.com/integrating-org-protocol-with-qutebrowser/</link>
    <pubDate>Mon, 14 Jun 2021 00:00:00 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://sidhartharya.com/integrating-org-protocol-with-qutebrowser/</guid>
    <description><![CDATA[I don&rsquo;t have a good introduction today. So let&rsquo;s just get to the post.
Org mode provides something called org protocol in order to let other applications be able to pass their data into the emacs server instance. We exploit this feature of emacs to write a little script which can capture stuff in org mode and store links from the browser.
Org Protocol &ldquo;org-protocol intercepts calls from emacsclient to trigger custom actions without external dependencies.]]></description>
</item></channel>
</rss>
